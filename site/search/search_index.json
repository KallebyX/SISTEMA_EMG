{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"SISTEMA EMG","text":"<p>Selecione o idioma da documenta\u00e7\u00e3o:</p> <ul> <li>Portugu\u00eas \ud83c\udde7\ud83c\uddf7</li> <li>English \ud83c\uddfa\ud83c\uddf8</li> </ul>"},{"location":"aquisicao_sinais/","title":"Aquisicao sinais","text":""},{"location":"aquisicao_sinais/#aquisicao-de-sinais-emg","title":"\ud83d\udce1 Aquisi\u00e7\u00e3o de Sinais EMG","text":"<ul> <li>Sensor: MyoWare 2.0</li> <li>Eletrodos: GND, Medi\u00e7\u00e3o, Sinal</li> <li>Microcontrolador: Arduino Mega</li> <li>Conex\u00e3o: Serial USB</li> <li>C\u00f3digo: arduino/emg_reader.ino</li> </ul>"},{"location":"arquitetura/","title":"Arquitetura","text":""},{"location":"arquitetura/#arquitetura-do-sistema","title":"\ud83e\udde9 Arquitetura do Sistema","text":"<p>Usu\u00e1rio \u2192 Sinal Muscular \u2192 Sensor EMG (MyoWare 2.0) \u2192 Arduino \u2192 Porta Serial \u2192 Python + ML \u2192 Classifica\u00e7\u00e3o \u2192 A\u00e7\u00e3o F\u00edsica</p>"},{"location":"arquitetura/#modulos","title":"M\u00f3dulos","text":"<ul> <li>Coleta de sinal (Arduino)</li> <li>Armazenamento (CSV/Excel)</li> <li>Treinamento (Python)</li> <li>Classifica\u00e7\u00e3o em tempo real</li> <li>Controle da pr\u00f3tese</li> </ul>"},{"location":"creditos_licenca/","title":"Creditos licenca","text":""},{"location":"creditos_licenca/#creditos-e-licenca","title":"\ud83e\uddfe Cr\u00e9ditos e Licen\u00e7a","text":"<ul> <li>Autor: Kalleby Evangelho Mota</li> <li>Startup: Biomove</li> <li>Licen\u00e7a: MIT License</li> <li>Institui\u00e7\u00e3o: Universidade Franciscana (UFN)</li> </ul>"},{"location":"execucao_local/","title":"Execucao local","text":""},{"location":"execucao_local/#execucao-local","title":"\ud83d\udcbb Execu\u00e7\u00e3o Local","text":"<ol> <li> <p>Clone o reposit\u00f3rio: <pre><code>git clone https://github.com/KallebyX/SISTEMA_EMG.git\ncd SISTEMA_EMG\n</code></pre></p> </li> <li> <p>Instale depend\u00eancias: <pre><code>pip install -r requirements.txt\n</code></pre></p> </li> <li> <p>Conecte o Arduino e execute: <pre><code>python realtime/classify.py\n</code></pre></p> </li> <li> <p>Treine o modelo: <pre><code>python model/train.py\n</code></pre></p> </li> </ol>"},{"location":"machine_learning/","title":"Machine learning","text":""},{"location":"machine_learning/#machine-learning","title":"\ud83e\udd16 Machine Learning","text":"<ul> <li>Movimentos: M\u00e3o Aberta / Fechada</li> <li>Modelo: RandomForestClassifier</li> <li>Script: model/train.py</li> <li>M\u00e9tricas: Acur\u00e1cia &gt; 90%, Lat\u00eancia &lt; 300ms</li> </ul>"},{"location":"motivacao/","title":"Motivacao","text":""},{"location":"motivacao/#motivacao-e-impacto-social","title":"\ud83c\udf0d Motiva\u00e7\u00e3o e Impacto Social","text":"<p>Milhares de pessoas amputadas n\u00e3o t\u00eam acesso a pr\u00f3teses mioel\u00e9tricas de alto custo. O SISTEMA_EMG visa democratizar o controle mioel\u00e9trico, oferecendo uma alternativa open source, de baixo custo e eficaz, integrada a pr\u00f3teses feitas com impress\u00e3o 3D.</p>"},{"location":"motivacao/#objetivos","title":"Objetivos","text":"<ul> <li>Captar sinais EMG</li> <li>Processar sinais em tempo real</li> <li>Classificar movimentos musculares</li> <li>Controlar pr\u00f3teses de forma inteligente</li> </ul>"},{"location":"roadmap/","title":"Roadmap","text":""},{"location":"roadmap/#roadmap","title":"\ud83d\udcc5 Roadmap","text":"<ul> <li>[x] Coleta de sinais</li> <li>[x] R\u00f3tulo manual</li> <li>[x] Treinamento b\u00e1sico</li> <li>[x] Classifica\u00e7\u00e3o ao vivo</li> <li>[ ] Interface web</li> <li>[ ] Controle f\u00edsico da pr\u00f3tese</li> <li>[ ] IA sequencial (LSTM/temporal)</li> </ul>"},{"location":"tempo_real/","title":"Tempo real","text":""},{"location":"tempo_real/#classificacao-em-tempo-real","title":"\u26a1 Classifica\u00e7\u00e3o em Tempo Real","text":"<ul> <li>Script: realtime/classify.py</li> <li>Leitura serial \u2192 ML \u2192 Resultado em tela ou hardware</li> <li>Planejamento futuro: integra\u00e7\u00e3o com motor/pr\u00f3tese</li> </ul>"},{"location":"en/","title":"Index (EN)","text":"<p>This section will be translated soon.</p>"},{"location":"en/aquisicao_sinais/","title":"Aquisicao Sinais (EN)","text":"<p>This section will be translated soon.</p>"},{"location":"en/arquitetura/","title":"Arquitetura (EN)","text":"<p>This section will be translated soon.</p>"},{"location":"en/creditos_licenca/","title":"Creditos Licenca (EN)","text":"<p>This section will be translated soon.</p>"},{"location":"en/execucao_local/","title":"Execucao Local (EN)","text":"<p>This section will be translated soon.</p>"},{"location":"en/machine_learning/","title":"Machine Learning (EN)","text":"<p>This section will be translated soon.</p>"},{"location":"en/motivacao/","title":"Motivacao (EN)","text":"<p>This section will be translated soon.</p>"},{"location":"en/roadmap/","title":"Roadmap (EN)","text":"<p>This section will be translated soon.</p>"},{"location":"en/tempo_real/","title":"Tempo Real (EN)","text":"<p>This section will be translated soon.</p>"},{"location":"pt-br/","title":"SISTEMA EMG \u2013 Documenta\u00e7\u00e3o T\u00e9cnica","text":"<p>Vers\u00e3o: 1.0 Autor: Kalleby Evangelho Mota Startup: Biomove \u00daltima atualiza\u00e7\u00e3o: Maio/2025</p> <p>Sistema de aquisi\u00e7\u00e3o, processamento e classifica\u00e7\u00e3o de sinais eletromiogr\u00e1ficos (EMG) para o controle de pr\u00f3teses mioel\u00e9tricas de m\u00e3o. A solu\u00e7\u00e3o utiliza sensores de superf\u00edcie, microcontroladores e algoritmos de machine learning para interpretar sinais musculares em tempo real.</p>"},{"location":"pt-br/aquisicao_sinais/","title":"Aquisi\u00e7\u00e3o de Sinais","text":""},{"location":"pt-br/aquisicao_sinais/#aquisicao-de-sinais-emg","title":"\ud83d\udce1 Aquisi\u00e7\u00e3o de Sinais EMG","text":"<ul> <li>Sensor: MyoWare 2.0</li> <li>Eletrodos: GND, Medi\u00e7\u00e3o, Sinal</li> <li>Microcontrolador: Arduino Mega</li> <li>Conex\u00e3o: Serial USB</li> <li>C\u00f3digo: arduino/emg_reader.ino</li> </ul>"},{"location":"pt-br/arquitetura/","title":"Arquitetura","text":""},{"location":"pt-br/arquitetura/#arquitetura-do-sistema","title":"\ud83e\udde9 Arquitetura do Sistema","text":"<p>Usu\u00e1rio \u2192 Sinal Muscular \u2192 Sensor EMG (MyoWare 2.0) \u2192 Arduino \u2192 Porta Serial \u2192 Python + ML \u2192 Classifica\u00e7\u00e3o \u2192 A\u00e7\u00e3o F\u00edsica</p>"},{"location":"pt-br/arquitetura/#modulos","title":"M\u00f3dulos","text":"<ul> <li>Coleta de sinal (Arduino)</li> <li>Armazenamento (CSV/Excel)</li> <li>Treinamento (Python)</li> <li>Classifica\u00e7\u00e3o em tempo real</li> <li>Controle da pr\u00f3tese</li> </ul>"},{"location":"pt-br/creditos_licenca/","title":"Cr\u00e9ditos e Licen\u00e7a","text":""},{"location":"pt-br/creditos_licenca/#creditos-e-licenca","title":"\ud83e\uddfe Cr\u00e9ditos e Licen\u00e7a","text":"<ul> <li>Autor: Kalleby Evangelho Mota</li> <li>Startup: Biomove</li> <li>Licen\u00e7a: MIT License</li> <li>Institui\u00e7\u00e3o: Universidade Franciscana (UFN)</li> </ul>"},{"location":"pt-br/execucao_local/","title":"Execu\u00e7\u00e3o Local","text":""},{"location":"pt-br/execucao_local/#execucao-local","title":"\ud83d\udcbb Execu\u00e7\u00e3o Local","text":"<ol> <li> <p>Clone o reposit\u00f3rio: <pre><code>git clone https://github.com/KallebyX/SISTEMA_EMG.git\ncd SISTEMA_EMG\n</code></pre></p> </li> <li> <p>Instale depend\u00eancias: <pre><code>pip install -r requirements.txt\n</code></pre></p> </li> <li> <p>Conecte o Arduino e execute: <pre><code>python realtime/classify.py\n</code></pre></p> </li> <li> <p>Treine o modelo: <pre><code>python model/train.py\n</code></pre></p> </li> </ol>"},{"location":"pt-br/machine_learning/","title":"Machine Learning","text":""},{"location":"pt-br/machine_learning/#machine-learning","title":"\ud83e\udd16 Machine Learning","text":"<ul> <li>Movimentos: M\u00e3o Aberta / Fechada</li> <li>Modelo: RandomForestClassifier</li> <li>Script: model/train.py</li> <li>M\u00e9tricas: Acur\u00e1cia &gt; 90%, Lat\u00eancia &lt; 300ms</li> </ul>"},{"location":"pt-br/motivacao/","title":"Motiva\u00e7\u00e3o","text":""},{"location":"pt-br/motivacao/#motivacao-e-impacto-social","title":"\ud83c\udf0d Motiva\u00e7\u00e3o e Impacto Social","text":"<p>Milhares de pessoas amputadas n\u00e3o t\u00eam acesso a pr\u00f3teses mioel\u00e9tricas de alto custo. O SISTEMA_EMG visa democratizar o controle mioel\u00e9trico, oferecendo uma alternativa open source, de baixo custo e eficaz, integrada a pr\u00f3teses feitas com impress\u00e3o 3D.</p>"},{"location":"pt-br/motivacao/#objetivos","title":"Objetivos","text":"<ul> <li>Captar sinais EMG</li> <li>Processar sinais em tempo real</li> <li>Classificar movimentos musculares</li> <li>Controlar pr\u00f3teses de forma inteligente</li> </ul>"},{"location":"pt-br/roadmap/","title":"Roadmap","text":""},{"location":"pt-br/roadmap/#roadmap","title":"\ud83d\udcc5 Roadmap","text":"<ul> <li>[x] Coleta de sinais</li> <li>[x] R\u00f3tulo manual</li> <li>[x] Treinamento b\u00e1sico</li> <li>[x] Classifica\u00e7\u00e3o ao vivo</li> <li>[ ] Interface web</li> <li>[ ] Controle f\u00edsico da pr\u00f3tese</li> <li>[ ] IA sequencial (LSTM/temporal)</li> </ul>"},{"location":"pt-br/tempo_real/","title":"Classifica\u00e7\u00e3o em Tempo Real","text":""},{"location":"pt-br/tempo_real/#classificacao-em-tempo-real","title":"\u26a1 Classifica\u00e7\u00e3o em Tempo Real","text":"<ul> <li>Script: realtime/classify.py</li> <li>Leitura serial \u2192 ML \u2192 Resultado em tela ou hardware</li> <li>Planejamento futuro: integra\u00e7\u00e3o com motor/pr\u00f3tese</li> </ul>"}]}